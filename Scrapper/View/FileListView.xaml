<UserControl x:Class="Scrapper.View.FileListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:EditInPlace="clr-namespace:InplaceEditBoxLib.Views;assembly=InplaceEditBoxLib"
			 xmlns:view="clr-namespace:UserNotification.View;assembly=UserNotification"
             xmlns:fsconv="clr-namespace:FileSystemModels.Converters;assembly=FileSystemModels"
             xmlns:fvbehav="clr-namespace:FileListView.Views.Behavior;assembly=FileListView"
             xmlns:fvloc="clr-namespace:FileSystemModels.Local;assembly=FileSystemModels"
             xmlns:conv="clr-namespace:FileListView.Converters;assembly=FileListView"
             xmlns:local="clr-namespace:Scrapper.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="500">
    <UserControl.Resources>
        <conv:UpdateBindingConverter x:Key="UpdateBindingConverter" />
        <fsconv:BrowseItemTypeToShellImageConverter x:Key="FolderBrowseItemTypeToShellImageConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0">
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                <Button Content="Up" Margin="2,0,2,0"></Button>
                <Button Content="Down" Margin="0,0,2,0"></Button>
            </StackPanel>
            <TextBox Text="{Binding SelectedFoler}" DockPanel.Dock="Left"></TextBox>
        </DockPanel>

        <!--  List files and folders here  -->
        <view:NotifyableContentControl
			Grid.Row="1"
            Margin="0,3,0,0"
			DataContext="{Binding FolderItemsView}"
			Notification="{Binding Notification}">

            <ListBox
				xmlns:bindLocal="clr-namespace:FileListView.Views;assembly=FileListView"
				fvbehav:BringIntoViewListBoxItem.ScrollSelectedIntoView="True"
				fvbehav:DoubleClickSelectorItem.DoubleClickItemCommand="{Binding Path=NavigateDownCommand}"
				ScrollViewer.CanContentScroll="True"
				ScrollViewer.HorizontalScrollBarVisibility="Auto"
				ScrollViewer.VerticalScrollBarVisibility="Auto"
				SelectedItem="{Binding SelectedItem}">
                <ListBox.ItemsSource>
                    <MultiBinding Converter="{StaticResource UpdateBindingConverter}">
                        <!--  First & Second argument control update of binding on 3rd argument  -->
                        <Binding Path="IsLoaded" RelativeSource="{RelativeSource Self}" />
                        <Binding
							Mode="OneWay"
							Path="IsBrowsing"
							UpdateSourceTrigger="PropertyChanged" />
                        <Binding
							Mode="OneWay"
							Path="CurrentItems"
							UpdateSourceTrigger="PropertyChanged" />
                    </MultiBinding>
                </ListBox.ItemsSource>

                <ListBox.Resources>
                    <BooleanToVisibilityConverter x:Key="boolToVis" />
                    <bindLocal:BindingProxy x:Key="DataContextProxy" Data="{Binding}" />
                </ListBox.Resources>
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem
							Command="{Binding NavigateDownCommand}"
							CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
							Header="{x:Static fvloc:Strings.CMD_Open_in_Application_Label}"
							ToolTip="{x:Static fvloc:Strings.CMD_Open_in_Application_Label_TT}" />

                        <MenuItem
							Command="{Binding OpenContainingFolderCommand}"
							CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
							Header="{x:Static fvloc:Strings.CMD_Open_in_Windows_Label}"
							ToolTip="{x:Static fvloc:Strings.CMD_Open_in_Windows_Label_TT}" />

                        <MenuItem
							Command="{Binding OpenInWindowsCommand}"
							CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
							Header="{x:Static fvloc:Strings.CMD_Open_with_Windows_Association_Label}"
							ToolTip="{x:Static fvloc:Strings.CMD_Open_with_Windows_Association_Label_TT}" />

                        <MenuItem
							Command="{Binding CopyPathCommand}"
							CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
							Header="{x:Static fvloc:Strings.CMD_Copy_Path_To_Clipboard_Label}"
							ToolTip="{x:Static fvloc:Strings.CMD_Copy_Path_To_Clipboard_Label_TT}" />

                        <Separator />

                        <MenuItem
							Command="{Binding BookmarkFolder.RecentFolderAddCommand}"
							CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
							Header="{x:Static fvloc:Strings.CMD_RecentFolderAdd_Label}"
							ToolTip="{x:Static fvloc:Strings.CMD_RecentFolderAdd_TT}" />

                        <MenuItem
							Command="{Binding BookmarkFolder.RecentFolderRemoveCommand}"
							CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
							Header="{x:Static fvloc:Strings.CMD_RecentFolderRemove_Label}"
							ToolTip="{x:Static fvloc:Strings.CMD_RecentFolderRemove_TT}" />
                        <Separator />

                        <MenuItem
							Command="{Binding Path=Data.CreateFolderCommand, Source={StaticResource DataContextProxy}}"
							CommandParameter="{Binding Path=Data.CurrentFolder, Source={StaticResource DataContextProxy}}"
							Header="{x:Static fvloc:Strings.STR_NewFolder_Command}"
							ToolTip="{x:Static fvloc:Strings.STR_NewFolder_Command_TT}" />

                        <MenuItem
							Command="{Binding Path=Data.StartRenameCommand, Source={StaticResource DataContextProxy}}"
							CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
							Header="{x:Static fvloc:Strings.STR_Rename_Command}"
							ToolTip="{x:Static fvloc:Strings.STR_Rename_Command_TT}" />
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Image
								Grid.Column="0"
								Width="16"
								Height="16"
								Margin="3,0"
								SnapsToDevicePixels="True"
								Source="{Binding Path=., Converter={StaticResource FolderBrowseItemTypeToShellImageConverter}}"
								Visibility="{Binding Path=Data.ShowIcons, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Source={StaticResource DataContextProxy}, Converter={StaticResource boolToVis}}">
                                <Image.InputBindings>
                                    <MouseBinding
										Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}, Path=DataContext.NavigateDownCommand}"
										CommandParameter="{Binding .}"
										MouseAction="LeftDoubleClick" />
                                </Image.InputBindings>
                            </Image>

                            <EditInPlace:EditBox
								Grid.Column="1"
								DisplayText="{Binding ItemDisplayString}"
								InvalidInputCharacters="{x:Static fvloc:Strings.ForbiddenRenameKeys}"
								InvalidInputCharactersErrorMessage="{x:Static fvloc:Strings.ForbiddenRenameKeysMessage}"
								InvalidInputCharactersErrorMessageTitle="{x:Static fvloc:Strings.ForbiddenRenameKeysTitle}"
								IsEditableOnDoubleClick="False"
								RenameCommand="{Binding Path=Data.RenameCommand, Source={StaticResource DataContextProxy}}"
								Text="{Binding ItemName}"
								ToolTip="{Binding ItemPath}"
								ToolTipService.ShowOnDisabled="True" />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </view:NotifyableContentControl>
    </Grid>
</UserControl>
