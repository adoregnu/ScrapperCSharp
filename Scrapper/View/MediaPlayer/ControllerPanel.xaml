<UserControl x:Class="Scrapper.View.MediaPlayer.ControllerPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Scrapper.View.MediaPlayer"
             mc:Ignorable="d" >
    <Grid Name="Controls" Visibility="Visible" Height="250" Background="{x:Null}">
        <Canvas IsHitTestVisible="False" Background="{DynamicResource ShadedBackgroundBrush}" />
        <Grid VerticalAlignment="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition Height="70"></RowDefinition>
            </Grid.RowDefinitions>
            <Slider Name="PositionSlider" Grid.Row="0" Margin="10,0" Cursor="Hand"
                Style="{DynamicResource PositionSliderStyle}"
                Visibility="{Binding Controller.SeekBarVisibility}"
                IsEnabled="{Binding MediaPlayer.IsOpen}"
                IsSnapToTickEnabled="False"
                SmallChange="{Binding MediaPlayer.PositionStep,
                    Converter={StaticResource TimeSpanToSecondsConverter}}"
                LargeChange="{Binding MediaPlayer.PositionStep,
                    Converter={StaticResource TimeSpanToSecondsConverter}}"
                Minimum="{Binding MediaPlayer.PlaybackStartTime,
                    Converter={StaticResource TimeSpanToSecondsConverter}}"
                Maximum="{Binding MediaPlayer.PlaybackEndTime,
                    Converter={StaticResource TimeSpanToSecondsConverter}}" 
                Value="{Binding MediaPlayer.Position,
                    Converter={StaticResource TimeSpanToSecondsConverter}}" />

            <DockPanel Name="ProgressPanel" Grid.Row="1" LastChildFill="True" Margin="20,0">
                <TextBlock
                    Width="100" Visibility="{Binding Controller.IsMediaOpenVisibility}"
                    VerticalAlignment="Center" DockPanel.Dock="Left"
                    Foreground="{StaticResource CustomSliderHighlightBrush}"
                    Text="{Binding MediaPlayer.Position, Converter=
                        {StaticResource TimeSpanFormatter}, Mode=OneWay}" />
                <TextBlock
                    Width="100" Visibility="{Binding Controller.SeekBarVisibility}"
                    VerticalAlignment="Center" TextAlignment="Right" DockPanel.Dock="Right"
                    Foreground="{StaticResource CustomSliderHighlightBrush}"
                    Text="{Binding MediaPlayer.RemainingDuration, Converter=
                        {StaticResource TimeSpanFormatter}, Mode=OneWay}" />
                <Grid Width="500">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition Width="100" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Visibility="{Binding Controller.BufferingProgressVisibility}"
                        Grid.Column="0" VerticalAlignment="Center" TextAlignment="Center"
                        Foreground="{StaticResource CustomSliderHighlightBrush}"
                        Text="{Binding MediaPlayer.BufferingProgress, Converter=
                            {StaticResource PercentageFormatter}}"
                        ToolTip="Buffering Progress" />
                    <ProgressBar
                        Visibility="{Binding Controller.BufferingProgressVisibility}"
                        Grid.Column="1" VerticalAlignment="Center"
                        Value="{Binding MediaPlayer.BufferingProgress, Mode=OneWay}"
                        Style="{DynamicResource NetworkProgressBarStyle}"
                        IsIndeterminate="{Binding MediaPlayer.IsOpening}"/>
                    <ProgressBar
                        Visibility="{Binding Controller.DownloadProgressVisibility}"
                        Grid.Column="2" VerticalAlignment="Center"
                        Value="{Binding MediaPlayer.DownloadProgress, Mode=OneWay}"
                        Style="{DynamicResource NetworkProgressBarStyle}"
                        IsIndeterminate="{Binding MediaPlayer.IsOpening}"></ProgressBar>
                    <TextBlock
                        Visibility="{Binding Controller.DownloadProgressVisibility}"
                        Grid.Column="3" VerticalAlignment="Center" TextAlignment="Center"
                        Foreground="{StaticResource CustomSliderHighlightBrush}"
                        Text="{Binding MediaPlayer.DownloadProgress,
                            Converter={StaticResource PercentageFormatter}}"
                        ToolTip="Download Progress" />
                </Grid>
            </DockPanel>
            <Grid Name="ControlsPanel" Grid.Row="2" Margin="20,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <DockPanel Name="LeftControls" HorizontalAlignment="Left" Grid.Column="0">
                    <ToggleButton
                        Visibility="{Binding Controller.CloseButtonVisibility}"
                        Style="{DynamicResource ModernToggleButtonStyle}"
                        IsChecked="{Binding MediaPlayer.VerticalSyncEnabled, Mode=TwoWay}"
                        ToolTip="Enable Vertical Sync">
                        <Path
                            Stretch="Uniform"
                            Data="{Binding Source={StaticResource VerticalSyncIcon}, Path=Data}"
                            Fill="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                    </ToggleButton>
                    <ToggleButton
                        Visibility="{Binding Controller.SeekBarVisibility}"
                        Style="{DynamicResource ModernToggleButtonStyle}"
                        IsChecked="{Binding MediaPlayer.ScrubbingEnabled, Mode=TwoWay}" ToolTip="Enable Seek Scrubbing">
                        <Path
                            Stretch="Uniform"
                            Data="{Binding Source={StaticResource ScrubbingIcon}, Path=Data}"
                            Fill="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type ToggleButton}}}" />
                    </ToggleButton>
                    <ToggleButton
                        Visibility="{Binding Controller.IsMediaOpenVisibility}"
                        Name="SoundMenuButton"
                        Style="{DynamicResource ModernToggleButtonStyle}">
                        <Path
                            Stretch="Uniform"
                            Data="{Binding Source={StaticResource AudioMenuIcon}, Path=Data}"
                            Fill="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type ToggleButton}}}" />
                    </ToggleButton>
                    <Popup
                        IsOpen="{Binding IsChecked, ElementName=SoundMenuButton, Mode=TwoWay}"
                        StaysOpen="False" Name="SoundMenuPopup"
                        PopupAnimation="Fade" Placement="Top"
                        PlacementTarget="{Binding ElementName=SoundMenuButton}"
                        VerticalOffset="2" HorizontalOffset="-18">
                        <Popup.Resources>
                            <Style TargetType="TextBlock">
                                <Setter
                                    Property="Foreground"
                                    Value="{StaticResource CustomSliderHighlightBrush}" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </Popup.Resources>
                        <Border Background="#FF1F1F1F"
                            BorderBrush="#FF767676"
                            BorderThickness="1">
                            <Grid Width="364" Height="120">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="60" />
                                </Grid.ColumnDefinitions>

                                <!--Volume Slider -->
                                <TextBlock Grid.Row="0" Grid.Column="0">Volume</TextBlock>
                                <Slider
                                    Grid.Row="0" Grid.Column="1" Minimum="0.0" Maximum="1.0"
                                    IsEnabled="{Binding Controller.IsAudioControlEnabled}"
                                    Style="{DynamicResource CustomSliderStyle}"
                                    Value="{Binding MediaPlayer.Volume}" />
                                <TextBlock
                                    Grid.Row="0" Grid.Column="2"
                                    Text="{Binding MediaPlayer.Volume, Mode=OneWay,
                                        Converter={StaticResource PercentageFormatter}}" />

                                <!--Balance Slider -->
                                <TextBlock Grid.Row="1" Grid.Column="0">Balance</TextBlock>
                                <Slider
                                    Grid.Row="1" Grid.Column="1" Minimum="-1.0" Maximum="1.0"
                                    IsEnabled="{Binding Controller.IsAudioControlEnabled}"
                                    Style="{DynamicResource CustomSliderStyle}"
                                    Value="{Binding MediaPlayer.Balance}" />
                                <TextBlock
                                    Grid.Row="1" Grid.Column="2"
                                    Text="{Binding MediaPlayer.Balance, Mode=OneWay, Converter=
                                        {StaticResource PercentageFormatter}, ConverterParameter=1}" />

                                <!-- Speed Ratio Slider -->
                                <TextBlock Grid.Row="2" Grid.Column="0">Speed</TextBlock>
                                <Slider
                                    Grid.Row="2" Grid.Column="1" Minimum="0.0" Maximum="8.0"
                                    IsEnabled="{Binding Controller.IsSpeedRatioEnabled}"
                                    Style="{DynamicResource CustomSliderStyle}"
                                    Value="{Binding MediaPlayer.SpeedRatio}" />
                                <TextBlock
                                    Grid.Row="2" Grid.Column="2"
                                    Text="{Binding MediaPlayer.SpeedRatio, Mode=OneWay,
                                        Converter={StaticResource PercentageFormatter}}" />
                            </Grid>
                        </Border>
                    </Popup>
                    <ToggleButton
                        Visibility="{Binding Controller.AudioControlVisibility}"
                        Name="MuteUnmuteButton"
                        Style="{DynamicResource ModernToggleButtonStyle}"
                        IsChecked="{Binding MediaPlayer.IsMuted, Mode=TwoWay}">
                        <Path
                            Stretch="Uniform"
                            Data="{Binding Source={StaticResource UnmuteIcon}, Path=Data}"
                            Fill="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type ToggleButton}}}" />
                    </ToggleButton>
                    <ToggleButton
                        Name="ClosedCaptionsButton"
                        Style="{DynamicResource ModernToggleButtonStyle}"
                        Visibility="{Binding Controller.ClosedCaptionsVisibility}"
                        IsChecked="{Binding MediaPlayer.ClosedCaptionsChannel, Converter=
                            {StaticResource ClosedCaptionsChannelConverter}, Mode=TwoWay}">
                        <TextBlock
                            Grid.Row="1" FontWeight="Bold" FontSize="11"
                            Text="{Binding MediaPlayer.ClosedCaptionsChannel}"
                            Foreground="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                    </ToggleButton>
                </DockPanel>

                <DockPanel Name="RightControls" HorizontalAlignment="Right" Grid.Column="2">

                    <ToggleButton
                        Visibility="{Binding Controller.SeekBarVisibility}"
                        Style="{DynamicResource ModernToggleButtonStyle}"
                        IsChecked="{Binding Controller.IsLoopingMediaEnabled, Mode=TwoWay}"
                        ToolTip="Enable Looping">
                        <Path
                            Stretch="Uniform"
                            Data="{Binding Source={StaticResource RepeatIcon}, Path=Data}"
                            Fill="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type ToggleButton}}}" />
                    </ToggleButton>

                    <Button
                        Style="{DynamicResource ModernButtonStyle}"
                        Command="{Binding CloseCommand}"
                        Visibility="{Binding Controller.CloseButtonVisibility}">
                        <Path
                            Stretch="Uniform"
                            Data="{Binding Source={StaticResource CloseIcon}, Path=Data}"
                            Fill="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type Button}}}"/>
                    </Button>
  
                    <ToggleButton
                        IsChecked="{Binding IsPropertiesPanelOpen}"
                        Name="OpenDebugButton"
                        Style="{DynamicResource ModernToggleButtonStyle}">
                        <Path
                            Stretch="Uniform"
                            Data="{Binding Source={StaticResource OpenDebugIcon}, Path=Data}"
                            Fill="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type ToggleButton}}}" />
                    </ToggleButton>
                </DockPanel>

                <DockPanel Name="CenterControls" HorizontalAlignment="Center" Grid.Column="1">
                    <Button
                        Visibility="{Binding Controller.PlayButtonVisibility}"
                        Style="{DynamicResource ModernButtonStyle}"
                        Command="{Binding PlayCommand}">
                        <Path
                            Stretch="Uniform"
                            Data="{Binding Source={StaticResource PlayIcon}, Path=Data}"
                            Fill="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type Button}}}" />
                    </Button>
                    <Button
                        Visibility="{Binding Controller.PauseButtonVisibility}"
                        Style="{DynamicResource ModernButtonStyle}"
                        Command="{Binding PauseCommand}">
                        <Path
                            Stretch="Uniform"
                            Data="{Binding Source={StaticResource PauseIcon}, Path=Data}"
                            Fill="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type Button}}}" />
                    </Button>
                    <Button
                        Visibility="{Binding Controller.StopButtonVisibility}"
                        Style="{DynamicResource ModernButtonStyle}"
                        Command="{Binding StopCommand}">
                        <Path
                            Stretch="Uniform"
                            Data="{Binding Source={StaticResource StopIcon}, Path=Data}"
                            Fill="{Binding Path=Foreground, RelativeSource=
                                {RelativeSource AncestorType={x:Type Button}}}" />
                    </Button>
                </DockPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
